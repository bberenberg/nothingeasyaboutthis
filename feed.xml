<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Nothing Easy About This</title>
    <link href="https://nothingeasyaboutthis.com/feed.xml" rel="self" />
    <link href="https://nothingeasyaboutthis.com" />
    <updated>1969-12-31T19:00:00-05:00</updated>
    <author>
        <name>Boris</name>
    </author>
    <id>https://nothingeasyaboutthis.com</id>

    <entry>
        <title>Offloading compute from my laptop to Cloud</title>
        <author>
            <name>Boris</name>
        </author>
        <link href="https://nothingeasyaboutthis.com/offloading-compute-from-my-laptop-to-cloud.html"/>
        <id>https://nothingeasyaboutthis.com/offloading-compute-from-my-laptop-to-cloud.html</id>

        <updated>2020-08-17T09:41:03-04:00</updated>
            <summary>
                <![CDATA[
                    This was originally published at https://medium.com/@borisberenberg/offloading-compute-from-my-laptop-to-cloud-e555931ebc1f Update August 2020: Since publishing this I have switched to a single server that has a lot more power from Hetzner for 1/2 the cost and better performance. I was disappointed to learn that offloading compute to a cloud&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>This was originally published at <a href="https://medium.com/@borisberenberg/offloading-compute-from-my-laptop-to-cloud-e555931ebc1f">https://medium.com/@borisberenberg/offloading-compute-from-my-laptop-to-cloud-e555931ebc1f</a> </p>
<p><strong>Update August 2020:</strong> Since publishing this I have switched to a single server that has a lot more power from Hetzner for 1/2 the cost and better performance. </p>
<h3 class="graf graf--h3">Offloading compute from my laptop to Cloud</h3>
<p class="graf graf--p">I was disappointed to learn that offloading compute to a cloud provider as a cost saving and flexibility providing measure introduces a fair amount of work, and saves very little money (if any).</p>
<p class="graf graf--p"><a href="https://atlasauthority.com" data-href="https://atlasauthority.com" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">Most of my work is on Atlassian products like Jira and Confluence.</a> We’re either testing functionality on behalf of a consulting client, or building apps (plugins) which we sell on the <a href="https://marketplace.atlassian.com/vendors/1212980/atlas-authority" data-href="https://marketplace.atlassian.com/vendors/1212980/atlas-authority" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">Atlassian Marketplace</a>. Depending on the task I am performing, the memory on my local device can be a limiting factor, and I may be thrashing CPU and disk I/O as well. My laptop is a 2017 Macbook Pro with 16gb of ram. Even after Slack improved their memory utilization and I switched to Safari, the system will bog down at times.</p>
<p class="graf graf--p">I have been interested in the idea of switching to a Chrome OS laptop (or an iPad Pro with a keyboard) for a while now for the sake of security, cost, battery life, lower requirements around fleet management and backups, size and weight, and cool-factor. However, I have been wary of the dependency on an internet connection, and on the various issues associated with remote compute.</p>
<p class="graf graf--p">There have been many articles written on the topic:</p>
<ul class="postList">
<li class="graf graf--li"><a href="https://blog.lessonslearned.org/building-a-more-secure-development-chromebook/" data-href="https://blog.lessonslearned.org/building-a-more-secure-development-chromebook/" class="markup--anchor markup--li-anchor" rel="nofollow noopener noopener" target="_blank">https://blog.lessonslearned.org/building-a-more-secure-development-chromebook/</a></li>
<li class="graf graf--li"><a href="https://blog.miguelgrinberg.com/post/coding-on-a-chromebook-revisited" data-href="https://blog.miguelgrinberg.com/post/coding-on-a-chromebook-revisited" class="markup--anchor markup--li-anchor" rel="nofollow noopener noopener" target="_blank">https://blog.miguelgrinberg.com/post/coding-on-a-chromebook-revisited</a></li>
<li class="graf graf--li"><a href="https://dev.to/petermbenjamin/a-minimal-chromebook-setup-for-development--hacking-5292" data-href="https://dev.to/petermbenjamin/a-minimal-chromebook-setup-for-development--hacking-5292" class="markup--anchor markup--li-anchor" rel="nofollow noopener noopener" target="_blank">https://dev.to/petermbenjamin/a-minimal-chromebook-setup-for-development--hacking-5292</a></li>
<li class="graf graf--li"><a href="https://headmelted.com/coding-on-a-chromebook-84335cce96c8" data-href="https://headmelted.com/coding-on-a-chromebook-84335cce96c8" class="markup--anchor markup--li-anchor" rel="nofollow noopener noopener" target="_blank">https://headmelted.com/coding-on-a-chromebook-84335cce96c8</a></li>
</ul>
<p class="graf graf--p">And while they all seem to work well for environments that have robust CI/CD pipelines, micro-services, and the all the latest sexiness, that isn't what my day to day looks like, so I wanted to try it out for myself.</p>
<h3 class="graf graf--h3">Why am I doing this</h3>
<p class="graf graf--p">The point of this is to simulate a Chrome OS (or similar style) of environment on my primary machine. Offload the compute to a cloud provider, and then evaluate this over the span of a few months. I received a $500 credit to Google Cloud Platform (GCP) earlier this year, and as it will expire in Feb, I thought this would be a good way to use it.</p>
<p class="graf graf--p">Concerns I had:</p>
<ul class="postList">
<li class="graf graf--li">From unlocking my computer to having compute ready to go, how long would it take?</li>
<li class="graf graf--li">From the moment I finish work, till everything is cleaned up, how long would it take?</li>
<li class="graf graf--li">Can we set up something to defend against my forgetting to turn it off?</li>
<li class="graf graf--li">What if I run out of storage space?</li>
<li class="graf graf--li">How do I deal with variable IP addresses?</li>
<li class="graf graf--li">How do I deal with variable port usage?</li>
<li class="graf graf--li">How do I securely get my SSH keys to this box as it will likely need to act as a jump host to other machines I normally work with?</li>
<li class="graf graf--li">How will my IDEs (VSCode and IntelliJ) work with this?</li>
<li class="graf graf--li">What does security look like for a system like this?</li>
<li class="graf graf--li">How does network latency and speed my ability to use this?</li>
</ul>
<h3 class="graf graf--h3">How does this actually work day to day?</h3>
<p class="graf graf--p">I have set up an on-demand, variable compute power, remote workstation on GCP. Once you know what you’re doing, this is actually surprisingly simple, but Google did not make it easy to figure out the best approach.</p>
<p class="graf graf--p">However, I did get to the point where all I need to do to set up, and tear down the environment I have designed is:</p>
<pre class="graf graf--pre">rd30<br>exit</pre>
<p class="graf graf--p">But what exactly does this do, and how does it do this?</p>
<p class="graf graf--p">This spins up a virtual machine with 30 GB of memory for me to use, and on exit, it cleans everything up for me.</p>
<p class="graf graf--p">Let’s jump back to the questions I listed earlier:</p>
<ul class="postList">
<li class="graf graf--li">From unlocking my computer to having compute ready to go, how long would it take?</li>
</ul>
<p class="graf graf--p">From the time I run the start command, till I am SSHed into the box is typically 50–70 seconds. If I switch my disk to SSD, it seems to save anywhere from 7–15 seconds.</p>
<p class="graf graf--p">Periodically, the startup time of the VM is longer than expected, and this results in the SSH command timing out, and then the delete command running. This seems to be an issue on the GCP side as it happens for an extended period (a week) and then resolves itself (capacity? bugs? who knows?). Here is the error:</p>
<pre class="graf graf--pre">Created [<a href="https://www.googleapis.com/compute/v1/projects/gcp-desktop/zones/us-east4-c/instances/remote-desktop" data-href="https://www.googleapis.com/compute/v1/projects/gcp-desktop/zones/us-east4-c/instances/remote-desktop" class="markup--anchor markup--pre-anchor" rel="nofollow noopener noopener" target="_blank">https://www.googleapis.com/compute/v1/projects/gcp-desktop/zones/us-east4-c/instances/remote-desktop</a>].<br>NAME            ZONE        MACHINE_TYPE   PREEMPTIBLE  INTERNAL_IP  EXTERNAL_IP    STATUS<br>remote-desktop  us-east4-c  n1-standard-2               10.150.0.54  35.199.57.192  RUNNING<br>ssh: connect to host 35.199.57.192 port 22: Connection refused<br>ERROR: (gcloud.compute.ssh) [/usr/bin/ssh] exited with return code [255].</pre>
<ul class="postList">
<li class="graf graf--li">From the moment I finish work, till everything is cleaned up, how long would it take?</li>
</ul>
<p class="graf graf--p">Teardowns take ~2 minutes and are effectively a hard shutdown. The shutdown command is issued near instantly, so this 2 minutes is the time for my terminal to get a confirmation of deletion back from Google. In practice I can close my laptop instantly, and let the deletion continue in the background.</p>
<p class="graf graf--p">My workload is an interesting one in that nothing really matters too much in it. Everything can be rebuilt very easily. If data gets corrupted, it’s unlikely to cause any major issues for me. This means that I can tear the machine down and not care about the status of PostgreSQL, Lucene, or any number of other bits of code that are running on my system.</p>
<p class="graf graf--p">If I need to disconnect from the system without shutting down the whole instance? I can kill the terminal and the delete command will never execute.</p>
<ul class="postList">
<li class="graf graf--li">Can we set up something to defend against my forgetting to turn it off?</li>
</ul>
<p class="graf graf--p">I have opted to avoid doing this via using auto scaling, and custom metrics due to the complexity involved. Following on from my SSH auto tear-down approach, I have configured an <a href="http://go2linux.garron.me/linux/2011/02/limit-idle-ssh-sessions-time-avoid-unattended-ones-clientaliveinterval-clientalivecoun/" data-href="http://go2linux.garron.me/linux/2011/02/limit-idle-ssh-sessions-time-avoid-unattended-ones-clientaliveinterval-clientalivecoun/" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">SSH timeout</a> that is reasonable for my use case.</p>
<pre class="graf graf--pre">ClientAliveInterval 120 // Send keep alive every 2 minutes<br>ClientAliveCountMax 120 // 4 hours of inactivity<br><code class="markup--code markup--pre-code">TCPKeepAlive yes</code></pre>
<p class="graf graf--p">Unfortunately… This doesn’t seem to work, and I don’t know why. #tofix</p>
<ul class="postList">
<li class="graf graf--li">What if I run out of storage space?</li>
</ul>
<p class="graf graf--p">Google makes it easy to <a href="https://cloud.google.com/compute/docs/disks/add-persistent-disk#resize_pd" data-href="https://cloud.google.com/compute/docs/disks/add-persistent-disk#resize_pd" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">re-size my persistent volume</a>.</p>
<ul class="postList">
<li class="graf graf--li">How do I deal with variable IP addresses?</li>
</ul>
<p class="graf graf--p">To make this easy to use in terms of web tech, I registered a domain with Google Domains, <a href="https://support.google.com/domains/answer/6147083?hl=en" data-href="https://support.google.com/domains/answer/6147083?hl=en" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">set up dynamic dns using ddclient</a> (Make sure to use the <code class="markup--code markup--p-code">protocol=googledomains</code> example), and force ddclient to run on both startup, and on login. I also set up SSL using <a href="https://certbot.eff.org/instructions" data-href="https://certbot.eff.org/instructions" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">Let’sEncrypt with Certbot</a>.</p>
<ul class="postList">
<li class="graf graf--li">How do I deal with variable port usage?</li>
</ul>
<p class="graf graf--p">I have decided to proxy everything through Nginx. I am sure you could open ports, or do something else, but within moments of bring this up Nginx was being hammered by exploit attempts. I believe this was triggered by the Let’sEncrypt registration, but I like knowing that Nginx is taking the brunt of it instead of the various apps I am testing with.</p>
<ul class="postList">
<li class="graf graf--li">How do I securely get my SSH keys to this box as it will likely need to act as a jump host to other machines I normally work with?</li>
</ul>
<p class="graf graf--p">The parameter <em class="markup--em markup--p-em">--ssh-flag="-A"</em> to the <em class="markup--em markup--p-em">gcloud ssh</em> command handles this for me</p>
<ul class="postList">
<li class="graf graf--li">How will my IDEs (VSCode and IntelliJ) work with this?</li>
</ul>
<p class="graf graf--p">VSCode needs nothing special. I <a href="https://code.visualstudio.com/docs/remote/ssh#_getting-started" data-href="https://code.visualstudio.com/docs/remote/ssh#_getting-started" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">followed the instructions</a> and it worked easily after setting up my SSH config like so</p>
<pre class="graf graf--pre">Host &lt;HOSTNAME&gt;<br>  User &lt;username&gt;<br>  IdentityFile ~/.ssh/google_compute_engine<br>  StrictHostKeyChecking no</pre>
<p class="graf graf--p">For IntelliJ I have not figured out how to do this.</p>
<ul class="postList">
<li class="graf graf--li">What does security look like for a system like this?</li>
</ul>
<p class="graf graf--p">I took a fairly lax approach by simply using a modern os, enabling <a href="https://help.ubuntu.com/community/AutomaticSecurityUpdates" data-href="https://help.ubuntu.com/community/AutomaticSecurityUpdates" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">automated updates</a>, keeping the system offline most of the time, keeping most network ports blocked, only using key based ssh access, and avoiding putting much sensitive material on the machine. It does host some of our source code that I am using in testing, but I honestly don’t see much risk in this being attacked. We’re a niche vendor selling in a small marketplace, and it would be trivial to identify someone who had stolen our code.</p>
<p class="graf graf--p">If you know that you’re going to only be accessing the system from a set of IPs, then you can add that to your firewall rules.</p>
<ul class="postList">
<li class="graf graf--li">How does network latency and speed my ability to use this?</li>
</ul>
<p class="graf graf--p">Some tasks are made much faster, for example pulling down dependencies due to the instance being on a much better connection than my home system.</p>
<p class="graf graf--p">Riding the Caltrain with the laptop tethered to my Iphone Xs Max with AT&amp;T was terrible and I couldn’t get the VM started. I am considering switching from ssh to <a href="https://mosh.org" data-href="https://mosh.org" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">mosh</a> but have not tried this out yet.</p>
<h3 class="graf graf--h3">How to set it up</h3>
<p class="graf graf--p">The following assumes you have the <em class="markup--em markup--p-em">gcloud</em> utility <a href="https://cloud.google.com/sdk/install" data-href="https://cloud.google.com/sdk/install" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">already installed</a>. I found it easier to work with the tool than to use the UI in many cases. We <a href="https://cloud.google.com/resource-manager/docs/creating-managing-projects" data-href="https://cloud.google.com/resource-manager/docs/creating-managing-projects" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">create a project</a> called <em class="markup--em markup--p-em">remote-desktop</em></p>
<pre class="graf graf--pre">gcloud projects create remote-desktop</pre>
<p class="graf graf--p">Then, we <a href="https://cloud.google.com/sdk/gcloud/reference/compute/instances/create" data-href="https://cloud.google.com/sdk/gcloud/reference/compute/instances/create" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">create our base VM</a>, the important thing here is to make sure you pick the <a href="https://cloud.google.com/compute/docs/regions-zones/" data-href="https://cloud.google.com/compute/docs/regions-zones/" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">right region</a>, get the disk size you want, and that you use the base image that you care about. In my case, this meant a 100GB Ubuntu 18.04 LTS configuration located in US East.</p>
<pre class="graf graf--pre">gcloud compute --project=gcp-desktop instances create remote-desktop --zone=us-east4-c --machine-type=n1-standard-1 --subnet=default --network-tier=PREMIUM --maintenance-policy=MIGRATE --scopes=https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/trace.append --tags=http-server,https-server --image=ubuntu-minimal-1804-bionic-v20190723 --image-project=ubuntu-os-cloud --boot-disk-size=100GB --boot-disk-type=pd-standard --boot-disk-device-name=instance-1</pre>
<p class="graf graf--p">The next step is to <a href="https://cloud.google.com/sdk/gcloud/reference/compute/disks/list" data-href="https://cloud.google.com/sdk/gcloud/reference/compute/disks/list" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">find a list</a> of all disks, and then <a href="https://cloud.google.com/sdk/gcloud/reference/compute/disks/snapshot" data-href="https://cloud.google.com/sdk/gcloud/reference/compute/disks/snapshot" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">snapshot the disk</a> which was created with this instance, and then <a href="https://cloud.google.com/compute/docs/instances/create-start-instance#createsnapshot" data-href="https://cloud.google.com/compute/docs/instances/create-start-instance#createsnapshot" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">convert it into a Persistent disk</a>.</p>
<pre class="graf graf--pre">gcloud compute disks list<br>gcloud compute disks snapshot remote-desktop // This is the name by default<br><code class="markup--code markup--pre-code">- Pick the region you used above<br>- Look for the snapshot id in the </code>string that looks like: <br>-- Creating snapshot(s) t3fy25enr88j...done<br><code class="markup--code markup--pre-code">gcloud compute disks create persistent-disk --source-snapshot </code>t3fy25enr88j // If you want a standard disk volume<br><code class="markup--code markup--pre-code">gcloud compute disks create persistent-disk --source-snapshot </code>t3fy25enr88j --type=pd-ssd // If you want this to be an SSD volume</pre>
<p class="graf graf--p">With this completed, it’s time to tear down the previous VM, and the intermediate snapshot you created.</p>
<pre class="graf graf--pre"><code class="markup--code markup--pre-code">gcloud compute snapshots delete </code>t3fy25enr88j<code class="markup--code markup--pre-code"><br></code>gcloud compute instances delete remote-desktop-30</pre>
<p class="graf graf--p">And now start your instance with your newly minted persistent disk, this time with a larger instance size.</p>
<pre class="graf graf--pre">gcloud compute --project=gcp-desktop instances create remote-desktop-30 --zone=us-east4-c --machine-type=n1-standard-8 --subnet=default --network-tier=PREMIUM --maintenance-policy=MIGRATE --scopes=<a href="https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/trace.append" data-href="https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/trace.append" class="markup--anchor markup--pre-anchor" rel="nofollow noopener noopener noopener" target="_blank">https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/trace.append</a> --tags=http-server,https-server --disk name=persistent-desktop-disk,boot=yes</pre>
<p class="graf graf--p">Because I work with web technologies, I also needed to ensure that we allow network traffic to the instance on standard HTTP and HTTPS ports.</p>
<pre class="graf graf--pre">gcloud compute --project=gcp-desktop firewall-rules create default-allow-http --direction=INGRESS --priority=1000 --network=default --action=ALLOW --rules=tcp:80 --source-ranges=0.0.0.0/0 --target-tags=http-server</pre>
<pre class="graf graf--pre">gcloud compute --project=gcp-desktop firewall-rules create default-allow-https --direction=INGRESS --priority=1000 --network=default --action=ALLOW --rules=tcp:443 --source-ranges=0.0.0.0/0 --target-tags=https-server</pre>
<p class="graf graf--p">But this doesn’t address the various issues we had above, so I am going to show my current approach to this, and then break it down for you:</p>
<pre class="graf graf--pre">gcloud compute --project=gcp-desktop instances create remote-desktop-30 --zone=us-east4-c --machine-type=n1-standard-8 --subnet=default --network-tier=PREMIUM --maintenance-policy=MIGRATE --scopes=<a href="https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/trace.append" data-href="https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/trace.append" class="markup--anchor markup--pre-anchor" rel="nofollow noopener noopener noopener" target="_blank">https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/trace.append</a> --tags=http-server,https-server --disk name=persistent-desktop-disk,boot=yes; gcloud compute ssh --ssh-flag="-A" remote-desktop-30 ; gcloud compute instances delete --quiet remote-desktop-30</pre>
<p class="graf graf--p">This single command is aliased to start a 8 core vm with 30gb of ram, automatically SSH to the newly created instance, and pass along my local ssh keys using key forwarding. Then on exit, it will automatically tear down the machine.</p>
<p class="graf graf--p">I have set up similar aliases with varying instance sizes. This means I am also reducing my spend if I don’t need to run big / complex jobs.</p>
<h3 class="graf graf--h3">Costs</h3>
<p class="graf graf--p">My estimated monthly costs are:</p>
<ul class="postList">
<li class="graf graf--li">100 GB general storage $4 (I can upgrade to SSD for $17/month)</li>
<li class="graf graf--li">22 working days per month * 4 hours per day * n1-standard-8 = ~$37.19</li>
</ul>
<p class="graf graf--p">August numbers in practice were $33.45 (and that was including me not shutting things down properly sometimes, and using smaller instance sizes often).</p>
<figure class="graf graf--figure"><figure class="post__image"><img loading="lazy"  src="https://nothingeasyaboutthis.com/media/posts/1/1Qfssn8OknDzHSwwFRfZVvQ.png" sizes="(max-width: 48em) 100vw, 768px" srcset="https://nothingeasyaboutthis.com/media/posts/1/responsive/1Qfssn8OknDzHSwwFRfZVvQ-xs.png 300w ,https://nothingeasyaboutthis.com/media/posts/1/responsive/1Qfssn8OknDzHSwwFRfZVvQ-sm.png 480w ,https://nothingeasyaboutthis.com/media/posts/1/responsive/1Qfssn8OknDzHSwwFRfZVvQ-md.png 768w ,https://nothingeasyaboutthis.com/media/posts/1/responsive/1Qfssn8OknDzHSwwFRfZVvQ-lg.png 1024w ,https://nothingeasyaboutthis.com/media/posts/1/responsive/1Qfssn8OknDzHSwwFRfZVvQ-xl.png 1360w ,https://nothingeasyaboutthis.com/media/posts/1/responsive/1Qfssn8OknDzHSwwFRfZVvQ-2xl.png 1600w"  alt="" width="1400" height="797"></figure></figure>
<p class="graf graf--p">But could this work for a company at scale? If you gave your engineers $1000 Chromebooks, and remote dev systems like this, how much could you save vs a Macbook Pro?</p>
<p class="graf graf--p">Napkin math:</p>
<ul class="postList">
<li class="graf graf--li">$3,000 (MBP) / 3 Years (My estimate on how long corporate MBPs last) = $1,000 / year</li>
<li class="graf graf--li">$999 (Pixelbook) / 3 = $333 / year</li>
<li class="graf graf--li">$1,000 - 333 = $666 margin remaining for GCP</li>
<li class="graf graf--li">$40 (monthly GCP spend) * 12 months = $480 per year per employee for remote compute</li>
</ul>
<p class="graf graf--p">So this works out to ~ $186 per year in savings. At the cost of staff having reduced ability to work if they don’t have access to strong internet connection.</p>
<p class="graf graf--p">However, you do gain all the benefits I mentioned earlier on in the article re: security, battery-life, and being less tied to one device / requiring less robust backups.</p>
<h3 class="graf graf--h3">Next Steps</h3>
<p class="graf graf--p">Some things I am interested to explore over the coming months</p>
<ul class="postList">
<li class="graf graf--li">Running some apps remotely and using XForwarding to access them. For example, can I run the work instance of Chrome and Firefox remotely? What about <a href="https://github.com/cdr/code-server" data-href="https://github.com/cdr/code-server" class="markup--anchor markup--li-anchor" rel="noopener" target="_blank">VS Code Server</a>?</li>
<li class="graf graf--li">Does mounting the remote filesystem over sshfs provide any value?</li>
<li class="graf graf--li">Can this be done cheaper on AWS or Digital Ocean? Can connection reliability be improved?</li>
<li class="graf graf--li">What can be done to reduce startup and teardown time without impacting costs? Based on <a href="https://cloud.google.com/blog/products/gcp/three-steps-to-compute-engine-startup-time-bliss-google-cloud-performance-atlas" data-href="https://cloud.google.com/blog/products/gcp/three-steps-to-compute-engine-startup-time-bliss-google-cloud-performance-atlas" class="markup--anchor markup--li-anchor" rel="nofollow noopener noopener" target="_blank">https://cloud.google.com/blog/products/gcp/three-steps-to-compute-engine-startup-time-bliss-google-cloud-performance-atlas</a> it doesn’t seem like I can gain more than 7–8 seconds at most:</li>
</ul>
<pre class="graf graf--pre">systemd-analyze blame<br>          5.251s postgresql@10-main.service<br>          1.778s cloud-init-local.service<br>          1.458s dev-sda1.device<br>          1.396s apport.service<br>          1.365s nginx.service<br>          1.332s snapd.service<br>          1.241s systemd-networkd-wait-online.service<br>          1.210s postgresql.service<br>          1.203s lvm2-monitor.service<br>          1.198s cloud-init.service<br>          1.105s ddclient.service<br>          1.038s google-instance-setup.service</pre>
<p class="graf graf--p graf--empty"> </p>
            ]]>
        </content>
    </entry>
</feed>
